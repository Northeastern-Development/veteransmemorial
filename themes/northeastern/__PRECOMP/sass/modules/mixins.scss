/**
 * modules/mixins
 * ---
 */


@mixin reset-box {
  padding: 0;
  margin: 0;
}



// this will be a mixin for the hover state of most blocks to include:
// a red arrow after the title
// a slight scaling of the background image

@mixin block-group{
  overflow: hidden;
  position: relative;
  width: 100%;
}

@mixin section-title {
  position: absolute;
  content: '';
  border-bottom:5px solid rgba($brand_colors-red,1.0);
  width: 60%;
  transform: translateX(-0%);
  bottom: -15px;
  left: 0%;
}

@mixin stat-block-large {
  background:$brand_colors-red;
  margin-top:nth($gutter,1);
  width:100%;
  color: rgba($brand_colors-white, 1.0);
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin stat-block-large-wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  padding:nth($gutter,1) 0;
  & > div{
    width:100%;
    margin:0 nth($gutter,1);
    text-align:center;
    & > h3 {
      @include font-9b-c;
      text-transform: uppercase;
    }
    @media only screen and (max-width: nth($breakpoint,1)){
      & > h3 {
       @include font-6b-c;
      }
    }
    @media only screen and (max-width: nth($breakpoint,2)){
      & > h3 {
       @include font-5b-c;
      }
    }
    & > small {
      @include font-5r-c;
      text-transform: uppercase;
    }
    @media only screen and (max-width: nth($breakpoint,1)){
      & > small {
        @include font-3r-c;
      }
    }
  }
  @media only screen and (max-width: nth($breakpoint,2)){
    & > div {
     margin:0 nth($gutter,2);
    }
  }
  @media only screen and (max-width: nth($breakpoint,3)){
    & > div {
     margin:0 nth($gutter,3);
    }
  }
}



// @mixin number-block {
//
// }

@mixin bgimage{
  position: absolute;
  width: 100%;
  height: 100%;
  transform: scale(1);
  transition: all .5s;
  //background: rgba($brand_colors-black,1.0);
  background-position: center center !important;
  background-repeat: no-repeat !important;
  background-size: cover !important;
}

@mixin block-item-hover{

  transform: scale(1.1);
  transition: all .5s;
}

@mixin text-crop($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
    // Configured in Step 1
    $top-crop: 0;
    $bottom-crop: 24;
    $crop-font-size: 20;
    $crop-line-height: 3.2;

    // Apply values to calculate em-based margins that work with any font size
    $dynamic-top-crop: max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
    $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;

    // Mixin output
    line-height: $line-height;

    &::before,
    &::after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
    }

    &::after {
        margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
    }
}

@mixin text-crop($line-height: 1.3, $top-adjustment: 0px, $bottom-adjustment: 0px) {
    // Configured in Step 1
    $top-crop: 0;
    $bottom-crop: 34;
    $crop-font-size: 20;
    $crop-line-height: 3.2;

    // Apply values to calculate em-based margins that work with any font size
    $dynamic-top-crop: max(($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;
    $dynamic-bottom-crop: max(($bottom-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)), 0) / $crop-font-size;

    // Mixin output
    line-height: $line-height;

    &::before,
    &::after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
    }

    &::after {
        margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
    }
}

@mixin lhCrop($line-height) {
  &::before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    margin-top: calc((1 - #{$line-height}) * 0.5em);
  }
}


// this will handle adding a red arrow to the end of a link or other item
// in some cases they may start hidden and reveal on hover

@mixin action-arrow{
  & > span {


  // &:after{
    @include font-7-c;
    color: rgba($brand_colors-red,1.0);
    //content: '\E8E4';
    // vertical-align: -20%;
    // padding: 0 0 0 0;
    // display: inline-block;
    // width: auto;
    // position: relative;
    // top: 13px;
    // height: 20px;
    // line-height: 35px;
    line-height: 0;
    // overflow: hidden;
  vertical-align: middle;
  padding-top:9px;
  }
  @media only screen and (max-width: nth($breakpoint,2)) {
    & > span {
      @include font-4-c;
      //top:7px;
      padding-top: 6px;
    }
  }
}

@mixin action-arrow-hidden{
  & > span{
    opacity: 0.0;
  }
}

@mixin action-arrow-shown{
  & > span{
    opacity: 1.0;
  }
}
